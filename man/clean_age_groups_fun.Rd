% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_age_groups_fun.R
\name{clean_age_groups_fun}
\alias{clean_age_groups_fun}
\title{Create age groups}
\usage{
clean_age_groups_fun(
  age,
  custom_groups = NULL,
  default_group = NULL,
  sep_infant = FALSE,
  max_age_lower = NULL,
  format = "numeric"
)
}
\arguments{
\item{age}{a numeric vector of ages}

\item{custom_groups}{a vector of the lower bounds of desired age groups,
e.g., c(0, 18, 65) for desired age groups 0-17, 18-64, 65+. Lower bound 0
will be added by default if missing from the list of provided values.}

\item{default_group}{(Optional) one of several preset age group schemes.
See below for optional \code{default_group} values.}

\item{sep_infant}{Boolean (T/F). If TRUE, then infants age 0 years will be
considered their own age group (0) separate from children aged 1+ years.
This results in an age group with lower bound 1 being added to the final
list of age groups, regardless of values provided for \code{custom_groups} or
\code{default_group}. If FALSE (default), then no extra changes will be made to
the age groups defined by either \code{custom_groups} or \code{default_group}.}

\item{max_age_lower}{(Optional) a numeric value for a maximum age group
lower bound. All age values greater than opr equal to this value will be
considered one age group, overwriting the higher age group bounds defined by
either \code{custom_groups} or \code{default_group}.}

\item{format}{The desired format of the returned age groups. If "numeric"
(default), then the numeric value of the lower bound for the age group is
returned (e.g., 75, 80, and 85 for age groups 75-79, 80-84, 85+). If "range"
or "character", then the age range label for the age groups will be returned
(e.g., "75-79", "80-84", and "85+").}
}
\value{
a vector the same length as \code{age} with corresponding age groups
instead of single-year ages.
}
\description{
Create new age group data from numeric age data
}
\details{
Provide one of either \code{custom_groups} or \code{default_group}, but not both.

If using a default/pre-set age grouping scheme, provide one of the following
values of \code{default_group} listed below (shown with associated age group
lower bounds)
\itemize{
\item "5" (char), 5 (num): 0, 5, 10, 15, ..., 80, 85 (5-year age groups)
\item "10" (char), 10 (num): 0, 10, 20, ..., 70, 80 (10-year age groups)
\item "65", "65+" (char), 65 (num): 0, 65
\item "18", "18+" (char), 18 (num): 0, 18
\item "10 offset": 0, 18, 25, 35, 45, ..., 75, 85
}
}
\examples{
sample_ages <- seq(0,102, by = 3)
clean_age_groups_fun(age = sample_ages, custom_groups = c(18, 65))
clean_age_groups_fun(age = sample_ages, custom_groups = seq(15, 85, by = 10))
clean_age_groups_fun(age = sample_ages, default_group = "5", sep_infant = TRUE)
clean_age_groups_fun(age = sample_ages, default_group = "10", format = "range")
clean_age_groups_fun(age = sample_ages, default_group = "5", max_age_lower = 65)

}
